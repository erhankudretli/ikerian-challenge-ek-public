name: 🛠️ Terraform Apply (Requires Approval)
run-name: Terraform Deployment to ${{ github.ref_name }} (Run ${{ github.run_number }})

# Trigger on push to 'dev' or 'prd' branches only.
on:
  push:
    branches:
      - dev
      - prd

# Requires 'write' permissions for state manipulation.
permissions:
  contents: read 
  # 'pull-requests: write' is required for adding PR comments (e.g., Infracost).
  pull-requests: write 

jobs:
  # --------------------------------------------------------------------------------
  # STAGE 1: PLAN, VALIDATE, ARTIFACTS, AND COST ESTIMATION
  # --------------------------------------------------------------------------------
  terraform-plan:
    runs-on: ubuntu-latest
    
    # AWS credentials provided via repository secrets.
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
    
    # Uses the branch name as the environment.
    environment: ${{ github.ref_name }} 

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      # Set working directory (dev or prd).
      - name: ⚙️ Set Working Directory
        id: set-dir
        run: |
          # GITHUB_REF_NAME will be 'dev' or 'prd'.
          echo "dir=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: ♻️ Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ steps.set-dir.outputs.dir }}

      - name: ✅ Terraform Validate
        run: terraform validate
        working-directory: ${{ steps.set-dir.outputs.dir }}

      - name: 📝 Terraform Plan & Save to Binary
        id: plan
        run: |
          # Save the plan as both human-readable text and binary artifact.
          terraform plan -var-file=terraform.tfvars -out=tfplan.binary | tee tfplan.txt
        working-directory: ${{ steps.set-dir.outputs.dir }}

      - name: ⬆️ Upload Plan Artifact (Binary)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}-tfplan-binary-${{ github.sha }}
          path: ${{ steps.set-dir.outputs.dir }}/tfplan.binary
          
      - name: ⬆️ Upload Plan Artifact (Readable Text)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}-tfplan-text-${{ github.sha }}
          path: ${{ steps.set-dir.outputs.dir }}/tfplan.txt

      # --------------------------------------------------------------------------------
      # INFRACOST (Cost Estimation)
      # --------------------------------------------------------------------------------
      # FIX: Re-introducing the Setup step to ensure the CLI is properly installed.
      - name: 💰 Setup Infracost CLI
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }} # API key provided here.

      - name: 📈 Infracost Breakdown & Comment
        # FIX: Using 'comment@v2' which is often more stable than 'pull-request@v2'
        uses: infracost/actions/comment@v2
        with:
          # Path to the binary plan file.
          path: ${{ steps.set-dir.outputs.dir }}/tfplan.binary 
          # Required for posting GitHub comments.
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # api-key artık yukarıdaki Setup adımında sağlandı.

  # --------------------------------------------------------------------------------
  # STAGE 2: APPROVED APPLY
  # --------------------------------------------------------------------------------
  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    
    # Uses the environment setup (e.g., for manual approval rules).
    environment: ${{ github.ref_name }} 
    
    # Only runs on 'dev' or 'prd' branches.
    if: github.ref_name == 'dev' || github.ref_name == 'prd' 

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: ⚙️ Set Working Directory
        id: set-dir
        run: |
          echo "dir=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      # Download the binary plan artifact for safe application.
      - name: ⬇️ Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.ref_name }}-tfplan-binary-${{ github.sha }}
          path: ${{ steps.set-dir.outputs.dir }} # Download to the working directory.

      - name: ♻️ Terraform Init (Apply is required after downloading artifact)
        id: init
        run: terraform init
        working-directory: ${{ steps.set-dir.outputs.dir }}

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve tfplan.binary
        working-directory: ${{ steps.set-dir.outputs.dir }}
